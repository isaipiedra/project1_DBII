services:
  mongo1:
    image: mongo:7.0
    container_name: mongo1
    hostname: mongo1
    command: ["mongod", "--bind_ip_all", "--replSet", "rs0"]
    ports:
      - "27017:27017"
    volumes:
      - ./data/mongo1:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--quiet", "--host", "localhost", "--eval", "db.runCommand({ ping: 1 }).ok"]
      interval: 5s
      timeout: 3s
      retries: 30

  mongo2:
    image: mongo:7.0
    container_name: mongo2
    hostname: mongo2
    command: ["mongod", "--bind_ip_all", "--replSet", "rs0"]
    ports:
      - "27018:27017"
    volumes:
      - ./data/mongo2:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--quiet", "--host", "localhost", "--eval", "db.runCommand({ ping: 1 }).ok"]
      interval: 5s
      timeout: 3s
      retries: 30

  rs-init:
    image: mongo:7.0
    container_name: rs-init
    depends_on:
      mongo1:
        condition: service_healthy
      mongo2:
        condition: service_healthy
    restart: "no"
    entrypoint: ["bash", "-c"]
    command: |
      "
      echo 'Esperando para verificar replica set...';
      sleep 3;
      
      # Verificar si ya está inicializado
      if mongosh --host mongo1 --quiet --eval 'rs.status()' 2>/dev/null | grep -q '\"ok\" : 1'; then
        echo 'Replica set ya está inicializado';
        exit 0;
      fi
      
      echo 'Inicializando replica set...';
      mongosh --host mongo1 --eval '
        rs.initiate({
          _id: \"rs0\",
          members: [
            { _id: 0, host: \"mongo1:27017\", priority: 2 },
            { _id: 1, host: \"mongo2:27017\", priority: 1 }
          ]
        });
        
        print(\"Esperando PRIMARY...\");
        for (let i = 0; i < 30; i++) {
          sleep(1000);
          try {
            const status = rs.status();
            const primary = status.members.find(m => m.stateStr === \"PRIMARY\");
            if (primary) {
              print(\"✓ PRIMARY encontrado: \" + primary.name);
              print(\"✓ Replica set configurado exitosamente\");
              quit(0);
            }
            print(\"Esperando... intento \" + (i+1));
          } catch(e) {
            print(\"Esperando... \" + e.message);
          }
        }
        print(\"✗ Timeout esperando PRIMARY\");
        quit(1);
      '
      "